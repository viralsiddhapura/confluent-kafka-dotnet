// ------------------------------------------------------------------------------
// <auto-generated>
//    Generated for Spectrum CSFLE Consumer
//    Changes to this file may cause incorrect behavior and will be lost if code
//    is regenerated
// </auto-generated>
// ------------------------------------------------------------------------------
namespace com.csfleExample
{
    using System;
    using System.Collections.Generic;
    using System.Text;
    using Avro;
    using Avro.Specific;
    
    public partial class DeductionAddon : ISpecificRecord
    {
        public static Schema _SCHEMA = Avro.Schema.Parse(@"{""type"":""record"",""name"":""DeductionAddon"",""fields"":[{""name"":""Amount"",""type"":""string""},{""name"":""YtdAmount"",""type"":""string""}]}");
        private string _Amount;
        private string _YtdAmount;
        
        public virtual Schema Schema => DeductionAddon._SCHEMA;
        
        public string Amount
        {
            get => this._Amount;
            set => this._Amount = value;
        }
        
        public string YtdAmount
        {
            get => this._YtdAmount;
            set => this._YtdAmount = value;
        }
        
        public virtual object Get(int fieldPos)
        {
            switch (fieldPos)
            {
                case 0: return this.Amount;
                case 1: return this.YtdAmount;
                default: throw new AvroRuntimeException("Bad index " + fieldPos + " in Get()");
            }
        }
        
        public virtual void Put(int fieldPos, object fieldValue)
        {
            switch (fieldPos)
            {
                case 0: this.Amount = (System.String)fieldValue; break;
                case 1: this.YtdAmount = (System.String)fieldValue; break;
                default: throw new AvroRuntimeException("Bad index " + fieldPos + " in Put()");
            }
        }
    }
    
    public partial class DirectDeposit : ISpecificRecord
    {
        public static Schema _SCHEMA = Avro.Schema.Parse(@"{""type"":""record"",""name"":""DirectDeposit"",""fields"":[{""name"":""BankAccountNumber"",""type"":""string""},{""name"":""DepositAmount"",""type"":""string""}]}");
        private string _BankAccountNumber;
        private string _DepositAmount;
        
        public virtual Schema Schema => DirectDeposit._SCHEMA;
        
        public string BankAccountNumber
        {
            get => this._BankAccountNumber;
            set => this._BankAccountNumber = value;
        }
        
        public string DepositAmount
        {
            get => this._DepositAmount;
            set => this._DepositAmount = value;
        }
        
        public virtual object Get(int fieldPos)
        {
            switch (fieldPos)
            {
                case 0: return this.BankAccountNumber;
                case 1: return this.DepositAmount;
                default: throw new AvroRuntimeException("Bad index " + fieldPos + " in Get()");
            }
        }
        
        public virtual void Put(int fieldPos, object fieldValue)
        {
            switch (fieldPos)
            {
                case 0: this.BankAccountNumber = (System.String)fieldValue; break;
                case 1: this.DepositAmount = (System.String)fieldValue; break;
                default: throw new AvroRuntimeException("Bad index " + fieldPos + " in Put()");
            }
        }
    }
    
    public partial class OtherEarnings : ISpecificRecord
    {
        public static Schema _SCHEMA = Avro.Schema.Parse(@"{""type"":""record"",""name"":""OtherEarnings"",""fields"":[{""name"":""Amount"",""type"":""string""}]}");
        private string _Amount;
        
        public virtual Schema Schema => OtherEarnings._SCHEMA;
        
        public string Amount
        {
            get => this._Amount;
            set => this._Amount = value;
        }
        
        public virtual object Get(int fieldPos)
        {
            switch (fieldPos)
            {
                case 0: return this.Amount;
                default: throw new AvroRuntimeException("Bad index " + fieldPos + " in Get()");
            }
        }
        
        public virtual void Put(int fieldPos, object fieldValue)
        {
            switch (fieldPos)
            {
                case 0: this.Amount = (System.String)fieldValue; break;
                default: throw new AvroRuntimeException("Bad index " + fieldPos + " in Put()");
            }
        }
    }
    
    public partial class RegularEarnings : ISpecificRecord
    {
        public static Schema _SCHEMA = Avro.Schema.Parse(@"{""type"":""record"",""name"":""RegularEarnings"",""fields"":[{""name"":""Amount"",""type"":""string""},{""name"":""Hours"",""type"":""string""},{""name"":""Rate"",""type"":""string""}]}");
        private string _Amount;
        private string _Hours;
        private string _Rate;
        
        public virtual Schema Schema => RegularEarnings._SCHEMA;
        
        public string Amount
        {
            get => this._Amount;
            set => this._Amount = value;
        }
        
        public string Hours
        {
            get => this._Hours;
            set => this._Hours = value;
        }
        
        public string Rate
        {
            get => this._Rate;
            set => this._Rate = value;
        }
        
        public virtual object Get(int fieldPos)
        {
            switch (fieldPos)
            {
                case 0: return this.Amount;
                case 1: return this.Hours;
                case 2: return this.Rate;
                default: throw new AvroRuntimeException("Bad index " + fieldPos + " in Get()");
            }
        }
        
        public virtual void Put(int fieldPos, object fieldValue)
        {
            switch (fieldPos)
            {
                case 0: this.Amount = (System.String)fieldValue; break;
                case 1: this.Hours = (System.String)fieldValue; break;
                case 2: this.Rate = (System.String)fieldValue; break;
                default: throw new AvroRuntimeException("Bad index " + fieldPos + " in Put()");
            }
        }
    }
    
    public partial class Taxes : ISpecificRecord
    {
        public static Schema _SCHEMA = Avro.Schema.Parse(@"{""type"":""record"",""name"":""Taxes"",""fields"":[{""name"":""CheckAmount"",""type"":""string""},{""name"":""YtdAmount"",""type"":""string""}]}");
        private string _CheckAmount;
        private string _YtdAmount;
        
        public virtual Schema Schema => Taxes._SCHEMA;
        
        public string CheckAmount
        {
            get => this._CheckAmount;
            set => this._CheckAmount = value;
        }
        
        public string YtdAmount
        {
            get => this._YtdAmount;
            set => this._YtdAmount = value;
        }
        
        public virtual object Get(int fieldPos)
        {
            switch (fieldPos)
            {
                case 0: return this.CheckAmount;
                case 1: return this.YtdAmount;
                default: throw new AvroRuntimeException("Bad index " + fieldPos + " in Get()");
            }
        }
        
        public virtual void Put(int fieldPos, object fieldValue)
        {
            switch (fieldPos)
            {
                case 0: this.CheckAmount = (System.String)fieldValue; break;
                case 1: this.YtdAmount = (System.String)fieldValue; break;
                default: throw new AvroRuntimeException("Bad index " + fieldPos + " in Put()");
            }
        }
    }
    
    public partial class VacationHolidaySick : ISpecificRecord
    {
        public static Schema _SCHEMA = Avro.Schema.Parse(@"{""type"":""record"",""name"":""VacationHolidaySick"",""fields"":[{""name"":""HoursBalance"",""type"":""string""},{""name"":""HoursThisCheck"",""type"":""string""}]}");
        private string _HoursBalance;
        private string _HoursThisCheck;
        
        public virtual Schema Schema => VacationHolidaySick._SCHEMA;
        
        public string HoursBalance
        {
            get => this._HoursBalance;
            set => this._HoursBalance = value;
        }
        
        public string HoursThisCheck
        {
            get => this._HoursThisCheck;
            set => this._HoursThisCheck = value;
        }
        
        public virtual object Get(int fieldPos)
        {
            switch (fieldPos)
            {
                case 0: return this.HoursBalance;
                case 1: return this.HoursThisCheck;
                default: throw new AvroRuntimeException("Bad index " + fieldPos + " in Get()");
            }
        }
        
        public virtual void Put(int fieldPos, object fieldValue)
        {
            switch (fieldPos)
            {
                case 0: this.HoursBalance = (System.String)fieldValue; break;
                case 1: this.HoursThisCheck = (System.String)fieldValue; break;
                default: throw new AvroRuntimeException("Bad index " + fieldPos + " in Put()");
            }
        }
    }
    
    public partial class PayrollData : ISpecificRecord
    {
        public static Schema _SCHEMA = Avro.Schema.Parse(@"{""type"":""record"",""name"":""PayrollData"",""namespace"":""com.csfleExample"",""fields"":[{""confluent:tags"":[""PII""],""name"":""Amount"",""type"":""string""},{""name"":""BankAccountNumber"",""type"":""string""},{""confluent:tags"":[""PII""],""name"":""CheckAmount"",""type"":""string""},{""name"":""CountyTaxAmount"",""type"":""string""},{""name"":""DeductionAddonList"",""type"":{""items"":{""fields"":[{""name"":""Amount"",""type"":""string""},{""name"":""YtdAmount"",""type"":""string""}],""name"":""DeductionAddon"",""type"":""record""},""type"":""array""}},{""name"":""DepositAmount"",""type"":""string""},{""default"":null,""name"":""DirectDepositList"",""type"":[""null"",{""items"":{""fields"":[{""name"":""BankAccountNumber"",""type"":""string""},{""name"":""DepositAmount"",""type"":""string""}],""name"":""DirectDeposit"",""type"":""record""},""type"":""array""}]},{""name"":""FederalIncomeTaxAmount"",""type"":""string""},{""default"":null,""name"":""FedExemptions"",""type"":[""null"",""string""]},{""name"":""GrossEarnings"",""type"":""string""},{""name"":""Hours"",""type"":""string""},{""name"":""HoursBalance"",""type"":""string""},{""name"":""HoursThisCheck"",""type"":""string""},{""name"":""LocalTaxAmount"",""type"":""string""},{""name"":""MedicareAmount"",""type"":""string""},{""name"":""NetAmount"",""type"":""string""},{""name"":""OtherEarningsList"",""type"":{""items"":{""fields"":[{""name"":""Amount"",""type"":""string""}],""name"":""OtherEarnings"",""type"":""record""},""type"":""array""}},{""name"":""Rate"",""type"":""string""},{""name"":""RegularEarningsList"",""type"":{""items"":{""fields"":[{""name"":""Amount"",""type"":""string""},{""name"":""Hours"",""type"":""string""},{""name"":""Rate"",""type"":""string""}],""name"":""RegularEarnings"",""type"":""record""},""type"":""array""}},{""name"":""ResidentStateDisabilityTaxAmount"",""type"":""string""},{""name"":""ResidentStateIncomeTaxAmount"",""type"":""string""},{""name"":""ResidentStateWorkersCompTaxAmount"",""type"":""string""},{""name"":""SocialSecurityAmount"",""type"":""string""},{""default"":null,""name"":""TaxList"",""type"":[""null"",{""items"":{""fields"":[{""name"":""CheckAmount"",""type"":""string""},{""name"":""YtdAmount"",""type"":""string""}],""name"":""Taxes"",""type"":""record""},""type"":""array""}]},{""name"":""TotalAddonAmount"",""type"":""string""},{""name"":""TotalDeductionAmount"",""type"":""string""},{""name"":""VacationHolidaySickList"",""type"":{""items"":{""fields"":[{""name"":""HoursBalance"",""type"":""string""},{""name"":""HoursThisCheck"",""type"":""string""}],""name"":""VacationHolidaySick"",""type"":""record""},""type"":""array""}},{""name"":""WorkStateDisabilityTaxAmount"",""type"":""string""},{""name"":""WorkStateIncomeTaxAmount"",""type"":""string""},{""name"":""WorkStateWorkersCompTaxAmount"",""type"":""string""},{""name"":""YtdAddonAmount"",""type"":""string""},{""name"":""YtdAmount"",""type"":""string""},{""default"":null,""name"":""YtdCountyTaxAmount"",""type"":[""null"",""string""]},{""name"":""YtdDeductionAmount"",""type"":""string""},{""default"":null,""name"":""YtdFederalIncomeTaxAmount"",""type"":[""null"",""string""]},{""name"":""YtdGrossEarnings"",""type"":""string""},{""default"":null,""name"":""YtdLocalTaxAmount"",""type"":[""null"",""string""]},{""default"":null,""name"":""YtdMedicareAmount"",""type"":[""null"",""string""]},{""name"":""YtdNetAmount"",""type"":""string""},{""default"":null,""name"":""YtdResidentStateDisabilityTaxAmount"",""type"":[""null"",""string""]},{""default"":null,""name"":""YtdResidentStateIncomeTaxAmount"",""type"":[""null"",""string""]},{""default"":null,""name"":""YtdResidentStateWorkersCompTaxAmount"",""type"":[""null"",""string""]},{""default"":null,""name"":""YtdSocialSecurityAmount"",""type"":[""null"",""string""]},{""name"":""YtdTaxAmount"",""type"":""string""},{""default"":null,""name"":""YtdWorkStateDisabilityTaxAmount"",""type"":[""null"",""string""]},{""default"":null,""name"":""YtdWorkStateIncomeTaxAmount"",""type"":[""null"",""string""]},{""default"":null,""name"":""YtdWorkStateWorkersCompTaxAmount"",""type"":[""null"",""string""]}]}");
        
        // Fields with backing properties
        private string _Amount;
        private string _BankAccountNumber; 
        private string _CheckAmount;
        private string _CountyTaxAmount;
        private IList<DeductionAddon> _DeductionAddonList;
        private string _DepositAmount;
        private IList<DirectDeposit> _DirectDepositList;
        private string _FederalIncomeTaxAmount;
        private string _FedExemptions;
        private string _GrossEarnings;
        private string _Hours;
        private string _HoursBalance;
        private string _HoursThisCheck;
        private string _LocalTaxAmount;
        private string _MedicareAmount;
        private string _NetAmount;
        private IList<OtherEarnings> _OtherEarningsList;
        private string _Rate;
        private IList<RegularEarnings> _RegularEarningsList;
        private string _ResidentStateDisabilityTaxAmount;
        private string _ResidentStateIncomeTaxAmount;
        private string _ResidentStateWorkersCompTaxAmount;
        private string _SocialSecurityAmount;
        private IList<Taxes> _TaxList;
        private string _TotalAddonAmount;
        private string _TotalDeductionAmount;
        private IList<VacationHolidaySick> _VacationHolidaySickList;
        private string _WorkStateDisabilityTaxAmount;
        private string _WorkStateIncomeTaxAmount;
        private string _WorkStateWorkersCompTaxAmount;
        private string _YtdAddonAmount;
        private string _YtdAmount;
        private string _YtdCountyTaxAmount;
        private string _YtdDeductionAmount;
        private string _YtdFederalIncomeTaxAmount;
        private string _YtdGrossEarnings;
        private string _YtdLocalTaxAmount;
        private string _YtdMedicareAmount;
        private string _YtdNetAmount;
        private string _YtdResidentStateDisabilityTaxAmount;
        private string _YtdResidentStateIncomeTaxAmount;
        private string _YtdResidentStateWorkersCompTaxAmount;
        private string _YtdSocialSecurityAmount;
        private string _YtdTaxAmount;
        private string _YtdWorkStateDisabilityTaxAmount;
        private string _YtdWorkStateIncomeTaxAmount;
        private string _YtdWorkStateWorkersCompTaxAmount;
        
        public virtual Schema Schema => PayrollData._SCHEMA;
        
        // Properties
        public string Amount { get => _Amount; set => _Amount = value; }
        public string BankAccountNumber { get => _BankAccountNumber; set => _BankAccountNumber = value; }
        public string CheckAmount { get => _CheckAmount; set => _CheckAmount = value; }
        public string CountyTaxAmount { get => _CountyTaxAmount; set => _CountyTaxAmount = value; }
        public IList<DeductionAddon> DeductionAddonList { get => _DeductionAddonList; set => _DeductionAddonList = value; }
        public string DepositAmount { get => _DepositAmount; set => _DepositAmount = value; }
        public IList<DirectDeposit> DirectDepositList { get => _DirectDepositList; set => _DirectDepositList = value; }
        public string FederalIncomeTaxAmount { get => _FederalIncomeTaxAmount; set => _FederalIncomeTaxAmount = value; }
        public string FedExemptions { get => _FedExemptions; set => _FedExemptions = value; }
        public string GrossEarnings { get => _GrossEarnings; set => _GrossEarnings = value; }
        public string Hours { get => _Hours; set => _Hours = value; }
        public string HoursBalance { get => _HoursBalance; set => _HoursBalance = value; }
        public string HoursThisCheck { get => _HoursThisCheck; set => _HoursThisCheck = value; }
        public string LocalTaxAmount { get => _LocalTaxAmount; set => _LocalTaxAmount = value; }
        public string MedicareAmount { get => _MedicareAmount; set => _MedicareAmount = value; }
        public string NetAmount { get => _NetAmount; set => _NetAmount = value; }
        public IList<OtherEarnings> OtherEarningsList { get => _OtherEarningsList; set => _OtherEarningsList = value; }
        public string Rate { get => _Rate; set => _Rate = value; }
        public IList<RegularEarnings> RegularEarningsList { get => _RegularEarningsList; set => _RegularEarningsList = value; }
        public string ResidentStateDisabilityTaxAmount { get => _ResidentStateDisabilityTaxAmount; set => _ResidentStateDisabilityTaxAmount = value; }
        public string ResidentStateIncomeTaxAmount { get => _ResidentStateIncomeTaxAmount; set => _ResidentStateIncomeTaxAmount = value; }
        public string ResidentStateWorkersCompTaxAmount { get => _ResidentStateWorkersCompTaxAmount; set => _ResidentStateWorkersCompTaxAmount = value; }
        public string SocialSecurityAmount { get => _SocialSecurityAmount; set => _SocialSecurityAmount = value; }
        public IList<Taxes> TaxList { get => _TaxList; set => _TaxList = value; }
        public string TotalAddonAmount { get => _TotalAddonAmount; set => _TotalAddonAmount = value; }
        public string TotalDeductionAmount { get => _TotalDeductionAmount; set => _TotalDeductionAmount = value; }
        public IList<VacationHolidaySick> VacationHolidaySickList { get => _VacationHolidaySickList; set => _VacationHolidaySickList = value; }
        public string WorkStateDisabilityTaxAmount { get => _WorkStateDisabilityTaxAmount; set => _WorkStateDisabilityTaxAmount = value; }
        public string WorkStateIncomeTaxAmount { get => _WorkStateIncomeTaxAmount; set => _WorkStateIncomeTaxAmount = value; }
        public string WorkStateWorkersCompTaxAmount { get => _WorkStateWorkersCompTaxAmount; set => _WorkStateWorkersCompTaxAmount = value; }
        public string YtdAddonAmount { get => _YtdAddonAmount; set => _YtdAddonAmount = value; }
        public string YtdAmount { get => _YtdAmount; set => _YtdAmount = value; }
        public string YtdCountyTaxAmount { get => _YtdCountyTaxAmount; set => _YtdCountyTaxAmount = value; }
        public string YtdDeductionAmount { get => _YtdDeductionAmount; set => _YtdDeductionAmount = value; }
        public string YtdFederalIncomeTaxAmount { get => _YtdFederalIncomeTaxAmount; set => _YtdFederalIncomeTaxAmount = value; }
        public string YtdGrossEarnings { get => _YtdGrossEarnings; set => _YtdGrossEarnings = value; }
        public string YtdLocalTaxAmount { get => _YtdLocalTaxAmount; set => _YtdLocalTaxAmount = value; }
        public string YtdMedicareAmount { get => _YtdMedicareAmount; set => _YtdMedicareAmount = value; }
        public string YtdNetAmount { get => _YtdNetAmount; set => _YtdNetAmount = value; }
        public string YtdResidentStateDisabilityTaxAmount { get => _YtdResidentStateDisabilityTaxAmount; set => _YtdResidentStateDisabilityTaxAmount = value; }
        public string YtdResidentStateIncomeTaxAmount { get => _YtdResidentStateIncomeTaxAmount; set => _YtdResidentStateIncomeTaxAmount = value; }
        public string YtdResidentStateWorkersCompTaxAmount { get => _YtdResidentStateWorkersCompTaxAmount; set => _YtdResidentStateWorkersCompTaxAmount = value; }
        public string YtdSocialSecurityAmount { get => _YtdSocialSecurityAmount; set => _YtdSocialSecurityAmount = value; }
        public string YtdTaxAmount { get => _YtdTaxAmount; set => _YtdTaxAmount = value; }
        public string YtdWorkStateDisabilityTaxAmount { get => _YtdWorkStateDisabilityTaxAmount; set => _YtdWorkStateDisabilityTaxAmount = value; }
        public string YtdWorkStateIncomeTaxAmount { get => _YtdWorkStateIncomeTaxAmount; set => _YtdWorkStateIncomeTaxAmount = value; }
        public string YtdWorkStateWorkersCompTaxAmount { get => _YtdWorkStateWorkersCompTaxAmount; set => _YtdWorkStateWorkersCompTaxAmount = value; }
        
        public virtual object Get(int fieldPos)
        {
            switch (fieldPos)
            {
                case 0: return this.Amount;
                case 1: return this.BankAccountNumber;
                case 2: return this.CheckAmount;
                case 3: return this.CountyTaxAmount;
                case 4: return this.DeductionAddonList;
                case 5: return this.DepositAmount;
                case 6: return this.DirectDepositList;
                case 7: return this.FederalIncomeTaxAmount;
                case 8: return this.FedExemptions;
                case 9: return this.GrossEarnings;
                case 10: return this.Hours;
                case 11: return this.HoursBalance;
                case 12: return this.HoursThisCheck;
                case 13: return this.LocalTaxAmount;
                case 14: return this.MedicareAmount;
                case 15: return this.NetAmount;
                case 16: return this.OtherEarningsList;
                case 17: return this.Rate;
                case 18: return this.RegularEarningsList;
                case 19: return this.ResidentStateDisabilityTaxAmount;
                case 20: return this.ResidentStateIncomeTaxAmount;
                case 21: return this.ResidentStateWorkersCompTaxAmount;
                case 22: return this.SocialSecurityAmount;
                case 23: return this.TaxList;
                case 24: return this.TotalAddonAmount;
                case 25: return this.TotalDeductionAmount;
                case 26: return this.VacationHolidaySickList;
                case 27: return this.WorkStateDisabilityTaxAmount;
                case 28: return this.WorkStateIncomeTaxAmount;
                case 29: return this.WorkStateWorkersCompTaxAmount;
                case 30: return this.YtdAddonAmount;
                case 31: return this.YtdAmount;
                case 32: return this.YtdCountyTaxAmount;
                case 33: return this.YtdDeductionAmount;
                case 34: return this.YtdFederalIncomeTaxAmount;
                case 35: return this.YtdGrossEarnings;
                case 36: return this.YtdLocalTaxAmount;
                case 37: return this.YtdMedicareAmount;
                case 38: return this.YtdNetAmount;
                case 39: return this.YtdResidentStateDisabilityTaxAmount;
                case 40: return this.YtdResidentStateIncomeTaxAmount;
                case 41: return this.YtdResidentStateWorkersCompTaxAmount;
                case 42: return this.YtdSocialSecurityAmount;
                case 43: return this.YtdTaxAmount;
                case 44: return this.YtdWorkStateDisabilityTaxAmount;
                case 45: return this.YtdWorkStateIncomeTaxAmount;
                case 46: return this.YtdWorkStateWorkersCompTaxAmount;
                default: throw new AvroRuntimeException("Bad index " + fieldPos + " in Get()");
            }
        }
        
        public virtual void Put(int fieldPos, object fieldValue)
        {
            switch (fieldPos)
            {
                case 0: this.Amount = (System.String)fieldValue; break;
                case 1: this.BankAccountNumber = (System.String)fieldValue; break;
                case 2: this.CheckAmount = (System.String)fieldValue; break;
                case 3: this.CountyTaxAmount = (System.String)fieldValue; break;
                case 4: this.DeductionAddonList = (IList<DeductionAddon>)fieldValue; break;
                case 5: this.DepositAmount = (System.String)fieldValue; break;
                case 6: this.DirectDepositList = (IList<DirectDeposit>)fieldValue; break;
                case 7: this.FederalIncomeTaxAmount = (System.String)fieldValue; break;
                case 8: this.FedExemptions = (System.String)fieldValue; break;
                case 9: this.GrossEarnings = (System.String)fieldValue; break;
                case 10: this.Hours = (System.String)fieldValue; break;
                case 11: this.HoursBalance = (System.String)fieldValue; break;
                case 12: this.HoursThisCheck = (System.String)fieldValue; break;
                case 13: this.LocalTaxAmount = (System.String)fieldValue; break;
                case 14: this.MedicareAmount = (System.String)fieldValue; break;
                case 15: this.NetAmount = (System.String)fieldValue; break;
                case 16: this.OtherEarningsList = (IList<OtherEarnings>)fieldValue; break;
                case 17: this.Rate = (System.String)fieldValue; break;
                case 18: this.RegularEarningsList = (IList<RegularEarnings>)fieldValue; break;
                case 19: this.ResidentStateDisabilityTaxAmount = (System.String)fieldValue; break;
                case 20: this.ResidentStateIncomeTaxAmount = (System.String)fieldValue; break;
                case 21: this.ResidentStateWorkersCompTaxAmount = (System.String)fieldValue; break;
                case 22: this.SocialSecurityAmount = (System.String)fieldValue; break;
                case 23: this.TaxList = (IList<Taxes>)fieldValue; break;
                case 24: this.TotalAddonAmount = (System.String)fieldValue; break;
                case 25: this.TotalDeductionAmount = (System.String)fieldValue; break;
                case 26: this.VacationHolidaySickList = (IList<VacationHolidaySick>)fieldValue; break;
                case 27: this.WorkStateDisabilityTaxAmount = (System.String)fieldValue; break;
                case 28: this.WorkStateIncomeTaxAmount = (System.String)fieldValue; break;
                case 29: this.WorkStateWorkersCompTaxAmount = (System.String)fieldValue; break;
                case 30: this.YtdAddonAmount = (System.String)fieldValue; break;
                case 31: this.YtdAmount = (System.String)fieldValue; break;
                case 32: this.YtdCountyTaxAmount = (System.String)fieldValue; break;
                case 33: this.YtdDeductionAmount = (System.String)fieldValue; break;
                case 34: this.YtdFederalIncomeTaxAmount = (System.String)fieldValue; break;
                case 35: this.YtdGrossEarnings = (System.String)fieldValue; break;
                case 36: this.YtdLocalTaxAmount = (System.String)fieldValue; break;
                case 37: this.YtdMedicareAmount = (System.String)fieldValue; break;
                case 38: this.YtdNetAmount = (System.String)fieldValue; break;
                case 39: this.YtdResidentStateDisabilityTaxAmount = (System.String)fieldValue; break;
                case 40: this.YtdResidentStateIncomeTaxAmount = (System.String)fieldValue; break;
                case 41: this.YtdResidentStateWorkersCompTaxAmount = (System.String)fieldValue; break;
                case 42: this.YtdSocialSecurityAmount = (System.String)fieldValue; break;
                case 43: this.YtdTaxAmount = (System.String)fieldValue; break;
                case 44: this.YtdWorkStateDisabilityTaxAmount = (System.String)fieldValue; break;
                case 45: this.YtdWorkStateIncomeTaxAmount = (System.String)fieldValue; break;
                case 46: this.YtdWorkStateWorkersCompTaxAmount = (System.String)fieldValue; break;
                default: throw new AvroRuntimeException("Bad index " + fieldPos + " in Put()");
            }
        }
    }
}